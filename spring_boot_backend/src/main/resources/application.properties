# ===========================
# SERVER CONFIG
# ===========================
server.port=8081
spring.application.name=AndroidInsta Backend

# ===========================
# MYSQL DATABASE CONFIG
# ===========================
spring.datasource.url=jdbc:mysql://localhost:3306/android_insta?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=Asia/Ho_Chi_Minh
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=

# ===========================
# JPA / HIBERNATE CONFIG
# ===========================
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# ===========================
# JWT Configuration
# ===========================
jwt.secret=AndroidInsta_Super_Secret_Key_For_JWT_Token_Generation_Must_Be_At_Least_512_Bits_Long_For_HS512
jwt.accessTokenExpiration=86400000
jwt.refreshTokenExpiration=604800000
jwt.issuer=AndroidInsta
jwt.audience=AndroidInsta-Users

# ===========================
# Redis Configuration
# ===========================
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.password=
spring.data.redis.timeout=60000
spring.cache.type=redis
spring.cache.redis.time-to-live=3600000

# ===========================
# Kafka Configuration
# ===========================
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=androidinsta-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# ===========================
# Actuator endpoints for monitoring
# ===========================
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
